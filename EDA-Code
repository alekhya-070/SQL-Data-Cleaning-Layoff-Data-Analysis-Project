-- Fetch all data
SELECT * 
FROM world_layoffs.layoffs_staging2;

-- Maximum layoffs in a single event
SELECT MAX(total_laid_off)
FROM world_layoffs.layoffs_staging2;

-- Maximum and minimum percentage layoffs
SELECT MAX(percentage_laid_off), MIN(percentage_laid_off)
FROM world_layoffs.layoffs_staging2
WHERE percentage_laid_off IS NOT NULL;

-- Companies with 100% layoffs
SELECT *
FROM world_layoffs.layoffs_staging2
WHERE percentage_laid_off = 1;

-- Companies with 100% layoffs, ordered by funds raised
SELECT *
FROM world_layoffs.layoffs_staging2
WHERE percentage_laid_off = 1
ORDER BY funds_raised_millions DESC;

-- Companies with the largest single layoff
SELECT company, total_laid_off
FROM world_layoffs.layoffs_staging2
ORDER BY total_laid_off DESC
LIMIT 5;

-- Companies with the most total layoffs
SELECT company, SUM(total_laid_off)
FROM world_layoffs.layoffs_staging2
GROUP BY company
ORDER BY SUM(total_laid_off) DESC
LIMIT 10;

-- Total layoffs by location
SELECT location, SUM(total_laid_off)
FROM world_layoffs.layoffs_staging2
GROUP BY location
ORDER BY SUM(total_laid_off) DESC
LIMIT 10;

-- Total layoffs by country
SELECT country, SUM(total_laid_off)
FROM world_layoffs.layoffs_staging2
GROUP BY country
ORDER BY SUM(total_laid_off) DESC;

-- Total layoffs by year
SELECT YEAR(date), SUM(total_laid_off)
FROM world_layoffs.layoffs_staging2
GROUP BY YEAR(date)
ORDER BY YEAR(date) ASC;

-- Total layoffs by industry
SELECT industry, SUM(total_laid_off)
FROM world_layoffs.layoffs_staging2
GROUP BY industry
ORDER BY SUM(total_laid_off) DESC;

-- Total layoffs by company stage
SELECT stage, SUM(total_laid_off)
FROM world_layoffs.layoffs_staging2
GROUP BY stage
ORDER BY SUM(total_laid_off) DESC;

-- Top companies by layoffs per year
WITH Company_Year AS (
  SELECT company, YEAR(date) AS year, SUM(total_laid_off) AS total_laid_off
  FROM world_layoffs.layoffs_staging2
  GROUP BY company, YEAR(date)
), Company_Year_Rank AS (
  SELECT company, year, total_laid_off, DENSE_RANK() OVER (PARTITION BY year ORDER BY total_laid_off DESC) AS rank
  FROM Company_Year
)
SELECT company, year, total_laid_off, rank
FROM Company_Year_Rank
WHERE rank <= 3
AND year IS NOT NULL
ORDER BY year ASC, total_laid_off DESC;

-- Rolling total of layoffs per month
WITH DATE_CTE AS (
  SELECT SUBSTRING(date, 1, 7) AS month, SUM(total_laid_off) AS total_laid_off
  FROM world_layoffs.layoffs_staging2
  GROUP BY SUBSTRING(date, 1, 7)
  ORDER BY SUBSTRING(date, 1, 7) ASC
)
SELECT month, SUM(total_laid_off) OVER (ORDER BY month ASC) AS rolling_total_layoffs
FROM DATE_CTE
ORDER BY month ASC;
